@import './mixins.scss';
@import './variable.scss';

$displays: block inline-block inline flex inline-flex;
@each $display in $displays {
  .#{$display} {
    display: #{$display};
  }
}
.hidden {
  display: none;
}

@each $dim in (width, height) {
  .#{$dim}-full {
    #{$dim}: 100%;
  }
}
.h-screen {
  height: 100vh;
}
.w-screen {
  height: 100vw;
}
.w-full {
  width: 100%;
}
.h-full {
  height: 100%;
}

$flex-direction-values: (
  row: row,
  row-reverse: row-reverse,
  col: column,
  col-reverse: column-reverse
);

@each $name, $value in $flex-direction-values {
  .flex-#{$name} {
    flex-direction: $value !important;
  }
}

$flex-wrap-values: nowrap, wrap, wrap-reverse;
@each $value in $flex-wrap-values {
  .flex-#{$value} {
    flex-wrap: $value !important;
  }
}

$justify-content-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  evenly: space-evenly
);
@each $name, $value in $justify-content-values {
  .justify-#{$name} {
    justify-content: $value !important;
  }
}

$align-items-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch
);
@each $name, $value in $align-items-values {
  .items-#{$name} {
    align-items: $value !important;
  }
}

$align-self-values: (
  auto: auto,
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
);
@each $name, $value in $align-self-values {
  .self-#{$name} {
    align-self: $value !important;
  }
}

$flex: (
  1: 1 1 0%,
  auto: 1 1 auto,
  initial: 0 1 auto,
  none: none
);

@each $name, $value in $flex {
  .flex-#{$name} {
    flex: $value !important;
  }
}
$flex-operators: (grow, shrink);
@each $value in $flex-operators {
  @each $name, $size in ('-0': 0, '': 1) {
    .flex-#{$value}#{$name} {
      flex-#{$value}: $size;
    }
  }
}

$shadows: (
  '-xs': 0 0 0 1px rgba(0, 0, 0, 0.05),
  '-sm': 0 1px 2px 0 rgba(0, 0, 0, 0.05),
  '': $shadow,
  '-md': (
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06)
  ),
  '-lg': (
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05)
  ),
  '-xl': (
    0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04)
  ),
  '-2xl': 0 25px 50px -12px rgba(0, 0, 0, 0.25),
  '-inner': inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
  '-outline': 0 0 0 3px rgba(66, 153, 225, 0.5),
  '-none': none
);

@each $name, $shadow in $shadows {
  .shadow#{$name} {
    box-shadow: $shadow;
  }
}

$font-weights: (
  'thin': 100,
  'extralight': 200,
  'light': 300,
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700,
  'extrabold': 800,
  'black': 900
);

@each $name, $size in $font-weights {
  .font-#{$name} {
    font-weight: $size;
  }
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.bottom-0 {
  bottom: 0;
}
.left-0 {
  left: 0;
}
.right-0 {
  right: 0;
}
.top-0 {
  top: 0;
}

$positions: (relative, absolute, static, fixed, sticky);

@each $position in $positions {
  .#{$position} {
    position: #{$position} !important;
  }
}

$disabled-bg-color: #d3d3d3;

.bg-disabled {
  background: $disabled-bg-color;
}

.bg-white {
  background: white;
}

.text-overflow {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

$aligns: (left, right, center, justify);

@each $align in $aligns {
  .text-#{$align} {
    text-align: #{$align};
  }
}

.overflow-clip {
  text-overflow: clip;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

$zIndexes: (0, 10, 20, 30, 40, 50, auto);

@each $zIndex in $zIndexes {
  .z-#{$zIndex} {
    z-index: $zIndex;
  }
}

.visible {
  visibility: visible;
}
.invisible {
  visibility: invisible;
}

$overflows: (auto, hidden, visible, scroll);

@each $flow in $overflows {
  @each $name in ('', '-x', '-y') {
    .overflow#{$name}-#{$flow} {
      overflow#{$name}: $flow;
    }
  }
}

.center {
  display: flex;
  align-items: center;
  justify-content: center;
}

$opacities: (0, 5, 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90, 95, 100);

@each $opacity in $opacities {
  .opacity-#{$opacity} {
    opacity: calc($opacity / 100);
  }
}

.ellipsis {
  @include multi-ellipsis(1);
}
.ellipsis-2 {
  @include multi-ellipsis(2);
}
.ellipsis-3 {
  @include multi-ellipsis(3);
}
